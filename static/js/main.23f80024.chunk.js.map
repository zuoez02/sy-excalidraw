{"version":3,"sources":["common/utils.js","common/initialData.js","net/interceptors.js","net/error_code.js","net/request.js","net/net_api.js","views/index/index.jsx","Main.js","index.js","common/env.js"],"names":["self","window","global","getCurrentWidgetId","env","getCurrentEnv","CURRENT_ENV","oceanPress","frameElement","parentElement","dataset","nId","siYuan","nodeId","unknown","initialData","appState","viewBackgroundColor","currentItemFontFamily","scrollToContent","interResponse","response","err","console","log","interRequest","request","ERR_CODE","err_code","status","err_msg","callback","Object","freeze","checkErrCode","err_code_res","BASE_URL","location","protocol","host","post","url","params","headers","axios","method","defaults","data","then","code","Promise","reject","resolve","catch","baseURL","timeout","interceptors","use","uploadFile","files","a","path","formData","FormData","append","res","downloadFile","name","get","undefined","setWidgetAttr","id","attrs","getWidgetAttr","getDate","date","Date","year","getFullYear","month","getMonth","day","getDay","now","renderFooter","Index","useEffect","excalidrawRef","useRef","useState","viewModeEnabled","setViewModeEnabled","zenModeEnabled","setZenModeEnabled","gridModeEnabled","setGridModeEnabled","theme","setTheme","navigator","language","lang","setLang","currentWidgetId","useMemo","savedData","setSavedData","initialized","setInitialized","isFullScreen","setisFullScreen","el","document","getElementsByClassName","exitFullscreen","requestFullscreen","json","serializeAsJSON","current","getSceneElements","getAppState","getFiles","fileBlob","Blob","type","fileName","file","File","fileMap","succMap","setToast","message","error","excalidrawFileName","getExcalidrawFile","className","onBlur","ref","UIOptions","canvasActions","loadScene","renderTopRightUI","grid","view","onLanguage","setGrid","setView","saveFile","setZen","toggleFullscreen","defaultValue","onChange","e","target","value","languages","map","item","label","onClick","open","title","size","color","saveExcalidrawFile","langCode","autoFocus","detectScroll","Main","ReactDOM","render","StrictMode","getElementById","querySelector","selectors","parent"],"mappings":"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","file":"static/js/main.23f80024.chunk.js","sourcesContent":["import { getCurrentEnv, CURRENT_ENV } from \"./env\";\r\nlet self = window || global;\r\n/** 获取当前挂件块的 id */\r\nexport const getCurrentWidgetId = () => {\r\n    const env = getCurrentEnv();\r\n    if (env === CURRENT_ENV.oceanPress) {\r\n        return self.frameElement?.parentElement?.dataset.nId;\r\n    } else if (env === CURRENT_ENV.siYuan) {\r\n        return self.frameElement?.parentElement?.parentElement?.dataset.nodeId;\r\n    } else if (env === CURRENT_ENV.unknown) {\r\n    } else {\r\n\r\n    }\r\n    return undefined;\r\n};","const initialData = {\r\n    appState: { viewBackgroundColor: \"#fff9db\", currentItemFontFamily: 1 },\r\n    scrollToContent: true,\r\n};\r\n\r\nexport default initialData;","export const interResponse = [\r\n    response => {\r\n        return response;\r\n    },\r\n    err => {\r\n        console.log(err);\r\n    }\r\n];\r\n\r\nexport const interRequest = [\r\n    request => {\r\n        return request;\r\n    },\r\n    err => {\r\n        console.log(err);\r\n    }\r\n];","const ERR_CODE = {\r\n    // 基础格式 7位数 xx_xx_xx_xxx:(部门_地区_业务_类型)\r\n    \"200102311\": {\r\n        err_code: '200102311',\r\n        status: 'error',\r\n        err_msg: 'this is a net err',\r\n        callback() {\r\n\r\n        },\r\n    },\r\n    \"3333333\": {\r\n        err_code: '333333',\r\n        status: 'error',\r\n        err_msg: '没有命中错误码',\r\n        callback() {\r\n\r\n        },\r\n    }\r\n};\r\nObject.freeze(ERR_CODE);\r\n\r\nexport const checkErrCode = err_code_res => {\r\n    if (+err_code_res === 0) {\r\n        return false;\r\n    }\r\n    const NO_ERR_CODE_IN_TABLE = '3333333';\r\n    let err;\r\n    if (err_code_res in ERR_CODE) {\r\n        err = ERR_CODE[err_code_res];\r\n    } else {\r\n        err = ERR_CODE[NO_ERR_CODE_IN_TABLE];\r\n    }\r\n    const { err_code, status, err_msg, callback } = err;\r\n    callback();\r\n    return {\r\n        err_code,\r\n        status,\r\n        err_msg,\r\n    };\r\n};\r\nexport default ERR_CODE;","import axios from \"axios\";\r\nimport { interRequest, interResponse } from \"./interceptors\";\r\nimport {checkErrCode} from \"./error_code\";\r\n\r\n\r\nexport const BASE_URL = window.location.protocol + \"//\" + window.location.host;\r\n\r\n// base_url设置\r\naxios.defaults.baseURL = BASE_URL;\r\n// content-type头设置\r\naxios.defaults.headers[\"Content-Type\"] = \"application/json\";\r\n// 超时设置\r\naxios.defaults.timeout = 10000;\r\n// 拦截器设置\r\naxios.interceptors.response.use(...interResponse);\r\naxios.interceptors.request.use(...interRequest);\r\n\r\n// 接口数据：err_code, data\r\n// {code: xxx, msg: '',  data: {},}\r\nexport function post(url, params, headers = {}) {\r\n        return axios({\r\n            method: \"post\",\r\n            headers: {\r\n                ...axios.defaults.headers,\r\n                ...headers,\r\n            },\r\n            url,\r\n            data: params\r\n        }).then(response => {\r\n            // 正常信息\r\n            const data = checkErrCode(response?.data?.code);\r\n            if(!data) {\r\n                return Promise.resolve(response?.data);\r\n            } else {\r\n                return Promise.reject(data);\r\n            }\r\n        }).catch(err => {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\nexport function get(url, params = {}) {\r\n        return axios({\r\n            method: \"get\",\r\n            url,\r\n            data: params\r\n        }).then(response => {\r\n           // 正常信息\r\n           const data = checkErrCode(response?.data?.code);\r\n           if(!data) {\r\n               return Promise.resolve(response?.data);\r\n           } else {\r\n               return Promise.reject(data);\r\n           }\r\n        }).catch(err => {\r\n            return Promise.reject(err);\r\n        });\r\n    }","import axios from 'axios';\r\nimport { post } from './request';\r\n\r\n// 上传资源文件\r\nexport const uploadFile = async (files, path = '/assets/') => {\r\n    const formData = new FormData();\r\n    formData.append('assetsDirPath', path);\r\n    formData.append('file[]', files);\r\n    try {\r\n        const res = await post('/api/asset/upload', formData, {\r\n            \"Content-Type\": \"multipart/form-data; boundary=----WebKitFormBoundarywQfr1gRNyYgeIt9h\",\r\n        });\r\n        return res.data;\r\n    } catch (e) {\r\n        return e;\r\n    }\r\n\r\n};\r\n\r\n// 下载文件\r\nexport const downloadFile = async (name) => {\r\n    return axios.get(name, {}).then(res => {\r\n        return res ? res.data : undefined;\r\n    });\r\n};\r\n\r\n// 设置块属性\r\nexport const setWidgetAttr = async (id, attrs) => {\r\n    try {\r\n        const res = await post('/api/attr/setBlockAttrs', {\r\n            id: `${id}`,\r\n            attrs,\r\n        });\r\n        return res.data;\r\n    } catch (e) {\r\n        return e;\r\n    }\r\n\r\n};\r\n\r\n// custom-excalidraw: '',\r\n\r\n\r\n// 获取块属性\r\nexport const getWidgetAttr = async (id) => {\r\n    try {\r\n        const res = await post('/api/attr/getBlockAttrs', {\r\n            id: `${id}`,\r\n        });\r\n        return res.data;\r\n    } catch (e) {\r\n        return e;\r\n    }\r\n\r\n};","import React, { useEffect, useState, useRef, useMemo } from \"react\";\r\nimport { getCurrentWidgetId } from '../../common/utils';\r\nimport {\r\n  Excalidraw,\r\n  languages,\r\n  serializeAsJSON,\r\n} from \"@excalidraw/excalidraw\";\r\nimport { Icon } from 'react-kui';\r\nimport initialData from \"../../common/initialData\";\r\nimport { uploadFile, downloadFile, setWidgetAttr, getWidgetAttr } from \"../../net/net_api\";\r\nimport \"./index.css\";\r\n\r\nconst getDate = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDay();\r\n  return `${year}-${month}-${day}_${Date.now()}`;\r\n};\r\nconst renderTopRightUI = (theme, grid, view, {\r\n  onLanguage, // 设置语言\r\n  setTheme, // 设置主题\r\n  setGrid, // 设置网格\r\n  setView, // 设置视图模式\r\n  setZen, // 禅模式\r\n  saveFile,\r\n  toggleFullscreen,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"excalidraw_top-right_wrap\"\r\n    >\r\n      <div>\r\n        <select\r\n          defaultValue={navigator.language}\r\n          className=\"excalidraw_top-right_select\"\r\n          onChange={(e) => {\r\n            onLanguage(e.target.value);\r\n          }}\r\n        >\r\n          {\r\n            languages.map(item => {\r\n              return (\r\n                <option key={item.code} value={item.code}>{item.label}</option>\r\n              );\r\n            })\r\n          }\r\n        </select>\r\n        <button className=\"excalidraw_top-right_button\" onClick={() => window.open(\"https://excalidraw.com/\", \"_blank\")}>\r\n          excalidraw\r\n        </button>\r\n      </div>\r\n      <div className=\"excalidraw_top-right_function\">\r\n        <div title=\"视图模式\" onClick={() => { setView() }}>\r\n          {\r\n            view ? <Icon type=\"eye\" size=\"18\" /> : <Icon type=\"eye-outline\" size=\"18\" />\r\n          }\r\n        </div>\r\n        <div title=\"主题\" onClick={() => { setTheme() }}>\r\n          {\r\n            theme === 'light' ? <Icon type=\"contrast-outline\" size=\"18\" />\r\n              : <Icon type=\"contrast\" size=\"18\" />\r\n          }\r\n        </div>\r\n        {/* <div onClick={() => {setZen()}}>\r\n          <Icon type=\"code-outline\" size=\"18\" />\r\n        </div> */}\r\n        <div title=\"网格模式\" onClick={() => { setGrid() }}>\r\n          {\r\n            grid ? <Icon type=\"grid\" size=\"18\" /> : <Icon type=\"grid-outline\" size=\"18\" />\r\n          }\r\n        </div>\r\n        <div title=\"保存\" onClick={() => {\r\n          // TODO: 归档保存\r\n          saveFile();\r\n        }}>\r\n          <Icon type=\"file-tray-full-outline\" size=\"18\" color=\"#f00\" />\r\n        </div>\r\n        <div title=\"切换全屏\" onClick={() => { toggleFullscreen() }}>\r\n          <Icon type=\"expand-outline\" size=\"18\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderFooter = () => {\r\n  return (<></>);\r\n};\r\n\r\nexport default function Index() {\r\n  useEffect(() => {\r\n    console.log('author: zuoez02 & github:https://github.com/zuoez02 ');\r\n  }, []);\r\n  const excalidrawRef = useRef(null);\r\n  // 设置视图模式\r\n  const [viewModeEnabled, setViewModeEnabled] = useState(false);\r\n  // 设置禅模式\r\n  const [zenModeEnabled, setZenModeEnabled] = useState(false);\r\n  // 设置网格模式\r\n  const [gridModeEnabled, setGridModeEnabled] = useState(false);\r\n  // 设置主题\r\n  const [theme, setTheme] = useState(\"light\");\r\n  // 语言设置\r\n  const [lang, setLang] = useState(navigator.language === 'zh' ? 'zh-CN' : navigator.language);\r\n  // 获取挂件块ID\r\n  const currentWidgetId = useMemo(() => getCurrentWidgetId(), []);\r\n\r\n  // 获取的数据对象\r\n  const [savedData, setSavedData] = useState(initialData);\r\n\r\n  const [initialized, setInitialized] = useState(false);\r\n\r\n  const [isFullScreen, setisFullScreen] = useState(false);\r\n\r\n  async function toggleFullscreen() {\r\n    const el = document.getElementsByClassName('excalidraw-wrapper')[0];\r\n    if (!el) {\r\n      return;\r\n    }\r\n    if (!isFullScreen) {\r\n      el.requestFullscreen && el.requestFullscreen();\r\n    } else {\r\n      document.exitFullscreen && document.exitFullscreen();\r\n    }\r\n    setisFullScreen(!isFullScreen);\r\n  }\r\n\r\n  async function saveExcalidrawFile() {\r\n    const json = serializeAsJSON(excalidrawRef.current.getSceneElements(), excalidrawRef.current.getAppState(), excalidrawRef.current.getFiles(), 'local');\r\n    const fileBlob = new Blob([json], {\r\n      type: 'application/json'\r\n    });\r\n    const fileName = currentWidgetId + '.excalidraw';\r\n    const file = new File([fileBlob], fileName);\r\n    try {\r\n      const res = await uploadFile(file);\r\n      const fileMap = res.succMap[fileName];\r\n      // 获取返回后的地址，保存在挂件块的custom-excalidraw属性上\r\n      setWidgetAttr(currentWidgetId, {\r\n        \"custom-excalidraw\": fileMap,\r\n        \"data-assets\": fileMap,\r\n      });\r\n      excalidrawRef.current.setToast({ message: '保存成功' });\r\n    } catch (e) {\r\n      excalidrawRef.current.setToast({ message: '保存失败' });\r\n      console.error(e);\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getExcalidrawFile() {\r\n      // 获取挂件的custom-excalidraw属性\r\n      const data = await getWidgetAttr(currentWidgetId);\r\n      const excalidrawFileName = data['custom-excalidraw'];\r\n      if (excalidrawFileName) {\r\n        downloadFile(excalidrawFileName).then(res => {\r\n          setSavedData(res);\r\n          setInitialized(true);\r\n        })\r\n      } else {\r\n        setInitialized(true);\r\n      }\r\n    }\r\n    getExcalidrawFile();\r\n  }, [currentWidgetId]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"excalidraw-wrapper\" onBlur={() => {\r\n      }}>\r\n        {(initialized && <Excalidraw\r\n          ref={excalidrawRef}\r\n          initialData={savedData}\r\n          // onLibraryChange={() => {console.log('hello woeld')}}\r\n          viewModeEnabled={viewModeEnabled}\r\n          zenModeEnabled={zenModeEnabled}\r\n          gridModeEnabled={gridModeEnabled}\r\n          theme={theme}\r\n          name={getDate()}\r\n          UIOptions={{\r\n            canvasActions: {\r\n              loadScene: true,\r\n              theme: true,\r\n            }\r\n          }}\r\n          renderTopRightUI={() => renderTopRightUI(\r\n            theme,\r\n            gridModeEnabled,\r\n            viewModeEnabled,\r\n            {\r\n              onLanguage: (lang) => setLang(lang),\r\n              setTheme: () => { theme === 'light' ? setTheme('dark') : setTheme('light') },\r\n              setGrid: () => setGridModeEnabled(!gridModeEnabled),\r\n              setView: () => setViewModeEnabled(!viewModeEnabled),\r\n              setZen: () => setZenModeEnabled(!zenModeEnabled),\r\n              saveFile: () => saveExcalidrawFile(),\r\n              toggleFullscreen: () => toggleFullscreen(),\r\n            }\r\n          )}\r\n          renderFooter={renderFooter}\r\n          langCode={lang}\r\n          autoFocus={false}\r\n          detectScroll={true}\r\n        />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Index from './views/index';\r\nfunction Main() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Index />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Main from './Main';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","let self = window || global;\r\nexport function getCurrentEnv() {\r\n    try {\r\n      // let s = self.parent?.document;\r\n    } catch (e) {\r\n      // 处于非同源 iframe，无法探知当前环境\r\n      return CURRENT_ENV.unknown;\r\n    }\r\n    if (querySelector(`main[data-n-id]`)) {\r\n      return CURRENT_ENV.env.oceanPress;\r\n    } else if (\r\n      querySelector(`.protyle-content`) &&\r\n      querySelector(`[data-node-id]`)\r\n    ) {\r\n      return CURRENT_ENV.siYuan;\r\n    }\r\n  \r\n    return CURRENT_ENV.unknown;\r\n  }\r\n  export const CURRENT_ENV = {\r\n    siYuan: \"siYuan\",\r\n    oceanPress: \"oceanPress\",\r\n    unknown: \"unknown\",\r\n  };\r\n  \r\n  function querySelector(selectors) {\r\n    return self.parent?.document.querySelector(selectors);\r\n  }"],"sourceRoot":""}